#!/bin/bash
# Limoji 0.1.0

readonly VERSION="0.1.0"

parent_path=$( cd "$(dirname "${BASH_SOURCE[0]}")" || exit ; pwd -P )

cd "$parent_path" || exit

# A few values so the script can run in color
COL_NC='\e[0m' # No Color
COL_LIGHT_RED='\e[1;31m'
COL_LIGHT_GREEN='\e[1;32m'
COL_LIGHT_BLUE='\e[1;94m'
COL_LIGHT_YELLOW='\e[1;93m'
TICK="${COL_NC}[${COL_LIGHT_GREEN}✓${COL_NC}]"
CROSS="${COL_NC}[${COL_LIGHT_RED}✗${COL_NC}]"
INFO="${COL_NC}[${COL_LIGHT_YELLOW}i${COL_NC}]"
QUESTION="${COL_NC}[${COL_LIGHT_BLUE}?${COL_NC}]"

# A function that copies the selected emoticon to the clipboard
# Works on both X11 and Wayland
copyToClipboard() {
    if [ "$XDG_SESSION_TYPE" == "x11" ]; then
        xclip -selection c
    elif [ "$XDG_SESSION_TYPE" == "wayland" ]; then
        wl-copy
    fi
}

# Function that picks a random emoticon name
fetchRandomName() {
    # Generate a random number between 1 and ascii line count
    randomLine=$(( 1 + RANDOM % $(wc -l < ascii) ))

    # Fetch emoticon's name from the selected line
    randomName=$(head -$randomLine ascii | tail +$randomLine | cut -d= -f1)
}

randomEmoticon() {
    # Picks a random emoticon name
    fetchRandomName

    # Rerun the function if randomName contains a non-alphabetical character
    while [[ "${randomName}" =~ [^a-zA-Z] ]]; do
        fetchRandomName
    done

    # Finally print the emoticon and copy it to the clipboard
    printf "%b %b$randomName was copied to the clipboard successfully:%b\n" "${TICK}" "${COL_LIGHT_GREEN}" "${COL_NC}"
    # shellcheck disable=SC2086 # Intended splitting
    echo -e ${!randomName} | tee >(copyToClipboard)

    #Ask the user if he wants another emoticon
    printf "%b Do you want another one? (y/n) " "${QUESTION}"
    read -n 1 -r
    printf "\n"
}

listEmoticons() {
    for (( c=2; c<=$(wc -l < ascii); c++ ))
    do
        name=$(sed "${c}q;d" ascii | cut -d= -f1)
        printf "%b:\n" "$name"
        printf "${!name}\n"
        printf "\n"
    done
}

# Disable globbing
set -f

# Fetch all emoticons from the file
source ascii

# Check if current session is X11
if [ "$XDG_SESSION_TYPE" == "x11" ]; then
    # Verify xclip has been installed
    if ! hash xclip 2> /dev/null; then
        printf "%b X11 detected\n" "${INFO}"
        printf "%b %bxclip is required for copying text to the clipboard%b\n" "${CROSS}" "${COL_LIGHT_RED}" "${COL_NC}"
        exit 2
    fi
# Otherwise, check if it is Wayland
elif [ "$XDG_SESSION_TYPE" == "wayland" ]; then
    # Verify wl-clipboard has been installed
    if ! hash wl-copy 2> /dev/null; then
        printf "%b Wayland detected\n" "${INFO}"
        printf "%b %bwl-clipboard is required for copying text to the clipboard%b\n" "${CROSS}" "${COL_LIGHT_RED}" "${COL_NC}"
        exit 2
    fi
fi

# Detect number of arguments
if [ $# == 1 ]; then
    if [ "$1" == --emoticons ] || [ "$1" == -e ]; then
        listEmoticons
    elif [ "$1" == --help ] || [ "$1" == -h ]; then
        echo -e "Usage: limoji <emoticon>\n  -r, --random    Print a random emoticon\n  -e, --emoticon  Show a list of the available emoticons\n  -v, --version   Display Limoji's version\n  -h, --help      Show this list\n\nFor more information you can visit our GitHub repository: https://github.com/GEROGIANNIS/Limoji"
    elif [ "$1" == --random ] || [ "$1" == -r ]; then
        # Picks a random emoticon
        randomEmoticon

        # If the user replies with a 'Yes', repick one
        while [[ $REPLY =~ ^[Yy]$ ]]; do
            randomEmoticon
        done
    elif [ "$1" == --version ] || [ "$1" == -v ]; then
        printf "Limoji %s\n" "${VERSION}"
    else
        # Convert all uppercase characters to lowercase
        set "$(echo "$1" | tr '[:upper:]' '[:lower:]')"

        # Check if the selected emoticon exists
        if ! test -z "${!1}"; then
            printf "%b %b$1 was copied to the clipboard successfully:%b\n" "${TICK}" "${COL_LIGHT_GREEN}" "${COL_NC}"
            # shellcheck disable=SC2086 # Intended splitting
            echo -e ${!1} | tee >(copyToClipboard)
        else
            printf "%b %bThe specified emoji doesn't exist!%b\n" "${CROSS}" "${COL_LIGHT_RED}" "${COL_NC}"
            printf "Try 'limoji --emoticons' for a list of available emojis.\n"
        fi
    fi
else
    printf "%b %bInvalid argument!%b\n" "${CROSS}" "${COL_LIGHT_RED}" "${COL_NC}"
    printf "Try 'limoji --help' for a list of available commands.\n"
fi

# Enable globbing
set -f
